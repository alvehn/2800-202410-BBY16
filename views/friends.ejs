<%- include("templates/default") %>

    <ul class="nav nav-tabs flex justify-center space-x-2 ">
        <!-- friends button -->
        <li class="nav-item">
            <a class="nav-link text-gray-700 hover:text-blue-500" aria-current="page" href="/friends">Friends</a>
        </li>
        <!-- group button -->
        <li class="nav-item">
            <a class="nav-link text-gray-700 hover:text-blue-500" href="/groups">Groups</a>
        </li>
    </ul>
    <div class="pt-4 mx-auto max-w-screen-lg px-4">
        <!-- search field-->
    <div class="mb-4">
        <input type="text" placeholder="Search..." class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    <div id="friends_container">
        <!-- fix-->
        <button id="open_friends">Daniel Wang</button>
        <div class="friend_profile" id="friend_profile">
            <button id="close_friends">Close</button>
        </div>
    </div>

    <div>
        <button id="open_adding" class="fixed w-12 h-12 bottom-4 right-4 z-10 bg-blue-500 text-white rounded-full text-2xl flex items-center justify-center">+</button>
    </div>
    <!--fix-->
    <div id="add_popup" class=" hidden fixed inset-0 flex items-center justify-center bg-gray-500 bg-opacity-75 transition-opacity duration-300">
        <div class="bg-white p-6 rounded-lg shadow-lg w-80">
            <form id="form">
                <input name='username' id='username' type='text' placeholder='Add Friend' class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4">
                <button type="button" onclick="return addFriend()" class="w-full px-4 py-2 bg-green-500 text-white rounded-lg">Add</button>
            </form>
            <button id="close_adding" class="mt-4 text-red-500 w-full">Close</button>
        </div>
    </div>
    

    <!-- This is the template for popup when veiwing user profile -->
    <template id="friendCardTemplate">
        <div class="p-4 border rounded-lg shadow-md mb-4">
            <p id="friend_username" class="font-bold"></p>
            <p id="friend_status" class="text-gray-600"></p>
        </div>
    </template>

    <script>
        const openProfile = document.getElementById("open_friends");
        const closeProfile = document.getElementById("close_friends");
        const profile = document.getElementById("friend_profile");
        const openAdd = document.getElementById("open_adding");
        const closeAdd = document.getElementById("close_adding");
        const Add = document.getElementById("add_popup");

        openProfile.addEventListener("click", () => {
            profile.classList.add("open");
        });

        closeProfile.addEventListener("click", () => {
            profile.classList.remove("open");
        });

        openAdd.addEventListener("click", () => {
        addPopup.classList.add("opacity-100", "z-50");
    });

    closeAdd.addEventListener("click", () => {
        addPopup.classList.remove("opacity-100", "z-50");
    });

        function addFriend() {
            let form = document.getElementById("form");

            // Serialize form data into a JSON object
            let jsonObject = {};
            for (let input of form.elements) {
                if (input.name) {
                    jsonObject[input.name] = input.value;
                }
            }

            fetch('/friends/check', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json' // Set Content-Type to JSON
                },
                body: JSON.stringify(jsonObject) // Send JSON data in the body
            })
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Get the response as JSON
                    } else {
                        throw new Error('Form submission failed');
                    }
                })
                .then(data => {
                    console.log(data.message);
                    form.insertAdjacentHTML('afterend', `<p>${data.message}</p>`);
                })
                .catch(error => {
                    // Handle network errors or errors from the server
                    console.error('Error:', error);
                });
        }

        async function displayFriendsDynamically() {
            let friends;
            // fetch the friends list from database
            await fetch('/friends/get_friends', {
                method: 'post',
            })
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Get the response as JSON
                    } else {
                        throw new Error('Form submission failed');
                    }
                })
                .then(data => {
                    friends = data.friends;
                })
                .catch(error => {
                    // Handle network errors or errors from the server
                    console.error('Error:', error);
                });
            // Creates the friends card
            let cardTemplate = document.getElementById("friendCardTemplate");
            let username = "test";
            let status = "test";
            for (let friend of friends) {
                let newcard = cardTemplate.content.cloneNode(true);
                // Serialize friend data into a JSON object
                let jsonObject = {};
                jsonObject["friend_id"] = friend;
                // fetch friend username and status from the database
                await fetch('/friends/get_friend_status', {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json' // Set Content-Type to JSON
                    },
                    body: JSON.stringify(jsonObject) // Send JSON data in the body
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json(); // Get the response as JSON
                        } else {
                            throw new Error('Form submission failed');
                        }
                    })
                    .then(data => {
                        console.log(data.username);
                        console.log(data.status);
                        username = data.username;
                        status = data.status;
                    })
                    .catch(error => {
                        // Handle network errors or errors from the server
                        console.error('Error:', error);
                    });
                newcard.getElementById("friend_username").innerHTML = username;
                newcard.getElementById("friend_status").innerHTML = status;
                document.getElementById("friends_container").appendChild(newcard);
            }
        }

        displayFriendsDynamically();

    </script>
    <%- include("templates/navbar") %>