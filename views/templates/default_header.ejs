<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" type="text/css" href="/css/stylesheet.css">
  <link rel="stylesheet" type="text/css" href="/css/tailwind.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <title>StudyPals</title>
  <link rel="icon" href="/assets/favicon.png" type="image/x-icon">
  <link href="https://fonts.googleapis.com/css2?family=Pixelify+Sans:wght@400..700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Pixelify Sans';
        }
    </style>
  <script src="/socket.io/socket.io.js"></script>
</head>
<body class="bg-beige overflow-hidden">
  <!-- Your existing content -->
  <div id="notification-container"></div>

  <div id="logoutNotification"
    class="hidden fixed top-200 left-1/2 z-1000 transform -translate-x-1/2 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative"
    role="alert">
    <span class="block sm:inline">You have successfully logged out.</span>
  </div>

  <script>
    // Function to get query parameters
    function getQueryParam(param) {
      const urlParams = new URLSearchParams(window.location.search);
      return urlParams.get(param);
    }

    // Show notification if "loggedout" query parameter exists
    document.addEventListener('DOMContentLoaded', function () {
      const loggedOut = getQueryParam('loggedout');
      if (loggedOut) {
        const notification = document.getElementById('logoutNotification');
        notification.classList.remove('hidden');
        setTimeout(() => {
          notification.classList.add('hidden');
        }, 3000); // Hide the notification after 3 seconds
      }
    });
  </script>

<script>
  // Connect to the server using Socket.IO
  const socket = io();

  socket.on('connect', () => {
    socket.emit('username', '<%= username %>');
  });

  // Listen for notifications from the server
  socket.on('notification', (notification) => {
    console.log('Received notification:', notification);
    // Display the notification using a popup
    displayNotification(notification);
  });

  // Function to display a floating notification popup
  function displayNotification(notification) {
    // Create a notification popup element
    const popup = document.createElement('div');
    popup.classList.add('notification-popup');
    popup.textContent = notification;

    // Append the popup to the notification container
    const container = document.getElementById('notification-container');
    container.appendChild(popup);

    // Remove the popup after a certain duration (e.g., 5 seconds)
    setTimeout(() => {
      popup.remove();
    }, 5000); // 5 seconds
  }
</script>