<%- include("templates/header") %>

<div
  id="profile-header"
  class="bg-celadon w-full p-4 flex flex-col items-center justify-center text-white relative">
  <div
    class="absolute z-10 left-2 top-3 text-white rounded-lg text-base px-3 py-2 text-center flex justify-center items-center">
    <a
      href="/update_profile"
      class="text-light-coral font-semibold text-lg no-underline hover:underline"
      ><img src="/assets/icons/edit.png" class="w- 10 h-10"/></a>
  </div>
  <div
    class="h-2/5 bg-orange-300 flex items-center justify-center rounded-md mb-1">
    <img
      src="<%= profileImageUrl %>"
      alt="Profile Image"
      class="w-24 h-24 rounded-full object-cover border-4 border-white"/>
  </div>
  <div class="flex flex-col justify-center items-center">
    <p class="text-center text-3xl font-medium mb-1">
      <%= user.display_name %>
    </p>
    <p class="text-center text-xl mb-1">#<%= user.username %></p>
    <p class="text-center text-xl mb-1"><%= user.email %></p>
  </div>
</div>
<div class="w-full flex flex-row justify-evenly mt-4 mb-4">
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Daily Goal</div>
    <div class="bg-font rounded-full h-3 dark:bg-font">
        <div id="daily-progress" class="bg-light-blue h-3 rounded-full" style="width: 0%;"></div>
    </div>
  </div>
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Weekly Goal</div>
    <div class="bg-font rounded-full h-3 dark:bg-font">
        <div id="weekly-progress" class="bg-light-blue h-3 rounded-full" style="width: 0%;"></div>
    </div>
  </div>
</div>
<div class="w-full flex flex-row justify-evenly rounded-xl mt-4 mb-4">
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Study Streak</div>
    <div class="relative flex justify-center items-center text-calendar-yellow">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-28 h-28">
        <path stroke="white" stroke-width="1" d="M9.049 2.927C9.338 2.147 10.662 2.147 10.951 2.927L12.737 7.14a1 1 0 00.95.69h4.377c.969 0 1.371 1.24.588 1.81l-3.54 2.57a1 1 0 00-.364 1.118l1.345 4.145c.289.88-.755 1.612-1.54 1.118l-3.54-2.57a1 1 0 00-1.175 0l-3.54 2.57c-.784.494-1.828-.238-1.54-1.118l1.345-4.145a1 1 0 00-.364-1.118l-3.54-2.57c-.783-.57-.38-1.81.588-1.81h4.377a1 1 0 00.95-.69L9.049 2.927z"/>
      </svg>
      <span class="absolute text-xl text-font font-semibold"><%= user.study_streak %> days</span>
    </div>
  </div>
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Total Hours</div>
    <div class="relative flex justify-center items-center text-calendar-yellow">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-28 h-28">
        <path stroke="white" stroke-width="1" d="M9.049 2.927C9.338 2.147 10.662 2.147 10.951 2.927L12.737 7.14a1 1 0 00.95.69h4.377c.969 0 1.371 1.24.588 1.81l-3.54 2.57a1 1 0 00-.364 1.118l1.345 4.145c.289.88-.755 1.612-1.54 1.118l-3.54-2.57a1 1 0 00-1.175 0l-3.54 2.57c-.784.494-1.828-.238-1.54-1.118l1.345-4.145a1 1 0 00-.364-1.118l-3.54-2.57c-.783-.57-.38-1.81.588-1.81h4.377a1 1 0 00.95-.69L9.049 2.927z"/>
      </svg>
      <span class="absolute text-xl text-font font-semibold"><%= Math.floor(user.total_study_hours / 3600) %> hrs</span>
    </div>
  </div>
</div>

<div class="flex flex-col w-full mt-8 pb-20 overflow-y-auto">
  <div class="study-calendar h-auto p-7 ml-8 mr-8 mb-4 rounded-lg">
    <div class="text-2xl font-semibold text-font mb-4">Study Calendar</div>
    <div class="flex flex-col border-4 border-white">
      <div class="flex justify-end mt-4 mb-4 year-select-container">
        <label for="year-select" class="text-font mr-4">Select Year:</label>
        <select id="year-select" class="years text-font mr-4"></select>
      </div>
      <div class="flex justify-center mb-4">
        <div class="flex items-center mr-6">
          <div class="w-4 h-4 bg-calendar-yellow mr-1"></div>
          <div class="text-font">&#8804; 2 hours</div>
        </div>
        <div class="flex items-center mr-6">
          <div class="w-4 h-4 bg-calendar-light-green mr-1"></div>
          <div class="text-font">&#8804; 4 hours</div>
        </div>
        <div class="flex items-center">
          <div class="w-4 h-4 bg-calendar-green mr-1"></div>
          <div class="text-font">&gt; 4 hours</div>
        </div>
      </div>
      <div class="calendar-container">
        <div class="calendar"></div>
      </div>
    </div>
  </div>
</div>

<script>
const userDailyGoal = 12; // Example: user set a goal of 12 hours for the day
const userWeeklyGoal = 80; // Example: user set a goal of 80 hours for the week
const userDailyProgress = 9; // Example: user has studied 9 hours today
const userWeeklyProgress = 50; // Example: user has studied 50 hours this week

// Max values in hours
const maxDailyGoal = 24;
const maxWeeklyGoal = 168;

// Calculate progress percentages
const dailyProgressPercent = (userDailyProgress / userDailyGoal) * 100;
const weeklyProgressPercent = (userWeeklyProgress / userWeeklyGoal) * 100;

// Update the progress bars
document.getElementById('daily-progress').style.width = `${Math.min(dailyProgressPercent, 100)}%`;
document.getElementById('weekly-progress').style.width = `${Math.min(weeklyProgressPercent, 100)}%`;

document.addEventListener("DOMContentLoaded", () => {
    const user_study_history = [
      { date: "2020-01-04", total_hours: 2 },
      { date: "2020-02-15", total_hours: 4 },
      { date: "2021-03-27", total_hours: 6 },
      { date: "2022-04-01", total_hours: 2 },
      { date: "2022-05-17", total_hours: 4 },
      { date: "2022-06-09", total_hours: 6 },
      { date: "2023-07-01", total_hours: 2 },
      { date: "2024-08-22", total_hours: 4 },
      { date: "2024-09-13", total_hours: 6 },
      { date: "2020-01-04", total_hours: 2 },
      { date: "2020-02-15", total_hours: 4 },
      { date: "2021-03-27", total_hours: 6 },
      { date: "2022-04-01", total_hours: 2 },
      { date: "2022-05-17", total_hours: 4 },
      { date: "2022-06-09", total_hours: 6 },
      { date: "2023-07-01", total_hours: 2 },
      { date: "2024-08-22", total_hours: 4 },
      { date: "2024-09-13", total_hours: 6 },
      { date: "2020-01-10", total_hours: 3 },
      { date: "2020-03-22", total_hours: 5 },
      { date: "2021-04-15", total_hours: 7 },
      { date: "2022-05-03", total_hours: 3 },
      { date: "2022-07-19", total_hours: 5 },
      { date: "2022-08-11", total_hours: 7 },
      { date: "2023-09-03", total_hours: 3 },
      { date: "2024-10-24", total_hours: 5 },
      { date: "2024-11-15", total_hours: 7 },
      { date: "2020-02-05", total_hours: 1 },
      { date: "2020-04-16", total_hours: 3 },
      { date: "2021-05-28", total_hours: 5 },
      { date: "2022-06-02", total_hours: 1 },
      { date: "2022-07-18", total_hours: 3 },
      { date: "2022-09-10", total_hours: 5 },
      { date: "2023-10-02", total_hours: 1 },
      { date: "2024-11-23", total_hours: 3 },
      { date: "2024-12-14", total_hours: 5 },
    ];

    console.log(user_study_history);
    const calendar = document.querySelector(".calendar");
    const yearSelect = document.getElementById("year-select");
    const years = new Set(
      user_study_history.map((day) => day.date.split("-")[0])
    );

    const defaultOption = document.createElement("option");
    defaultOption.value = "";
    defaultOption.textContent = "All";
    yearSelect.appendChild(defaultOption);

    years.forEach((year) => {
      const yearOption = document.createElement("option");
      yearOption.value = year;
      yearOption.textContent = year;
      yearSelect.appendChild(yearOption);
    });

    yearSelect.addEventListener("change", () => {
      displayHistory(yearSelect.value);
    });

    function displayHistory(selectedYear) {
      calendar.innerHTML = "";
      user_study_history.forEach((day) => {
        const [year, month, date] = day.date.split("-");
        console.log(`Processing date: ${date}`);
        if (selectedYear === "" || year === selectedYear) {
          const dayBox = document.createElement("div");
          dayBox.classList.add("day-box");
          if (day.total_hours <= 2) {
            dayBox.classList.add("low");
          } else if (day.total_hours <= 4) {
            dayBox.classList.add("medium");
          } else {
            dayBox.classList.add("high");
          }
          const yearSpan = document.createElement("span");
          yearSpan.textContent = year;

          const hoursSpan = document.createElement("span");
          hoursSpan.textContent = `${day.total_hours} hrs`;

          const dateSpan = document.createElement("span");
          dateSpan.textContent = `${month} - ${date}`; // Extract and format the month and day
          dateSpan.classList.add("text-xs");

          dayBox.appendChild(yearSpan);
          dayBox.appendChild(dateSpan);
          dayBox.appendChild(hoursSpan);

          calendar.appendChild(dayBox);
        }
      });
    }
    yearSelect.value = "";
    displayHistory("");
  });
</script>
<%- include("templates/navbar") %>
