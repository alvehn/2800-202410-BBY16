<%- include("templates/header", { username: user.username }) %>
<div id="profile-header" class="bg-celadon w-full p-4 flex flex-col items-center justify-center text-white relative">

    <button id="editButton" data-dropdown-toggle="editMenu"
    class="absolute z-10 left-2 top-3 text-white rounded-lg text-base px-3 py-2 text-center flex justify-center items-center"
    type="button">
    <img src="/assets/icons/edit.png" class="w-10 h-10">
    </button>

    <!-- Dropdown menu -->
    <div id="editMenu" class="absolute left-4 top-16 z-50 bg-white divide-y divide-white rounded-lg shadow w-44  dark:divide-light-coral hidden ">
    <div class="py-2" aria-labelledby="editButton">
        <div>
        <a href="/update_profile" class="flex items-center px-4 py-2 no-underline hover:bg-light-coral dark:hover:bg-light-coral dark:text-light-coral dark:hover:text-white hover-image">
            <img src="/assets/icons/profile_outline_coral.png" class="w-7 h-7 mr-4" edit-hover="/assets/icons/profile_outline_white.png">Update Profile</a>
        </div>
        <div>
        <a href="/change_password" class="flex items-center px-4 py-2 no-underline hover:bg-light-coral dark:hover:bg-light-coral dark:text-light-coral dark:hover:text-white hover-image">
            <img src="/assets/icons/key_coral.png" class="w-6 h-6 mr-4" edit-hover="/assets/icons/key_white.png">Change Password</a>
        </div>
    </div>
    </div>

    <div class="h-2/5 bg-orange-300 flex items-center justify-center rounded-md mb-1">
        <img src="<%= profileImageUrl %>" alt="Profile Image" class="w-24 h-24 rounded-full object-cover border-4 border-white"/>
    </div>
    <div class="flex flex-col justify-center items-center">
        <p class="text-center text-3xl font-medium mb-1"><%= user.display_name %></p>
        <p class="text-center text-xl mb-1">#<%= user.username %></p>
        <p class="text-center text-xl mb-1"><%= user.email %></p>
    </div>
</div>
<div id="goal-button-container" class="flex justify-start mt-4 mb-4 ml-8 pl-7 ">
    <button id="goal-button" class="bg-light-blue hover:bg-argentinian-blue text-white p-2 rounded">Set Goals</button>
</div>
<div class="w-full flex flex-row justify-evenly mt-4 mb-2">
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Daily Goal</div>
    <div class="bg-font rounded-full h-3 dark:bg-font relative">
        <div id="daily-progress" class="bg-light-blue h-3 rounded-full" style="width: 0%;"></div>
        <span id="daily-goal-label" class="absolute right-0 top-3 text-font text-sm mr-2"></span>
    </div>
  </div>
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Weekly Goal</div>
    <div class="bg-font rounded-full h-3 dark:bg-font relative">
        <div id="weekly-progress" class="bg-light-blue h-3 rounded-full" style="width: 0%;"></div>
        <span id="weekly-goal-label" class="absolute right-0 top-3 text-font text-sm mr-2"></span>
    </div>
  </div>
</div>

<div id="goal-modal" class="modal flex">
    <div class="modal-content">
      <form id="goal-form">
        <label for="daily-goal" class="block text-font mb-2">Daily Goal (hours):</label>
        <input type="number" id="daily-goal" class="border rounded p-2 mb-4 w-full" max="24" min="1" required>
        <label for="weekly-goal" class="block text-font mb-2">Weekly Goal (hours):</label>
        <input type="number" id="weekly-goal" class="border rounded p-2 mb-4 w-full" max="168" min="1" required>
        <button id="close-modal" type="submit" class="bg-celadon hover:bg-dark-celadon text-white p-2 rounded w-full">Set Goals</button>
      </form>
    </div>
</div>

<div class="w-full flex flex-row justify-evenly rounded-xl mt-4 mb-2">
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Study Streak</div>
    <div class="relative flex justify-center items-center text-calendar-yellow">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-28 h-28">
        <path stroke="white" stroke-width="1" d="M9.049 2.927C9.338 2.147 10.662 2.147 10.951 2.927L12.737 7.14a1 1 0 00.95.69h4.377c.969 0 1.371 1.24.588 1.81l-3.54 2.57a1 1 0 00-.364 1.118l1.345 4.145c.289.88-.755 1.612-1.54 1.118l-3.54-2.57a1 1 0 00-1.175 0l-3.54 2.57c-.784.494-1.828-.238-1.54-1.118l1.345-4.145a1 1 0 00-.364-1.118l-3.54-2.57c-.783-.57-.38-1.81.588-1.81h4.377a1 1 0 00.95-.69L9.049 2.927z"/>
      </svg>
      <span class="absolute text-xl text-font font-semibold"><%= user.study_streak %> days</span>
    </div>
  </div>
  <div class="w-5/12">
    <div class="text-xl font-semibold text-font mb-2">Total Hours</div>
    <div class="relative flex justify-center items-center text-calendar-yellow">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-28 h-28">
        <path stroke="white" stroke-width="1" d="M9.049 2.927C9.338 2.147 10.662 2.147 10.951 2.927L12.737 7.14a1 1 0 00.95.69h4.377c.969 0 1.371 1.24.588 1.81l-3.54 2.57a1 1 0 00-.364 1.118l1.345 4.145c.289.88-.755 1.612-1.54 1.118l-3.54-2.57a1 1 0 00-1.175 0l-3.54 2.57c-.784.494-1.828-.238-1.54-1.118l1.345-4.145a1 1 0 00-.364-1.118l-3.54-2.57c-.783-.57-.38-1.81.588-1.81h4.377a1 1 0 00.95-.69L9.049 2.927z"/>
      </svg>
      <span class="absolute text-xl text-font font-semibold"><%= Math.floor(user.total_study_hours / 3600) %> hrs</span>
    </div>
  </div>
</div>

<div class="flex flex-col w-full mt-6 pb-20 overflow-y-auto">
  <div class="study-calendar h-auto p-7 ml-8 mr-8 mb-4 rounded-lg">
    <div class="text-2xl font-semibold text-font mb-4">Study Calendar</div>
    <div class="flex flex-col border-4 border-white">
      <div class="flex justify-end mt-4 mb-4 year-select-container">
        <label for="year-select" class="text-font mr-4">Select Year:</label>
        <select id="year-select" class="years text-font mr-4"></select>
      </div>
      <div class="flex justify-center mb-4">
        <div class="flex items-center mr-6">
          <div class="w-4 h-4 bg-calendar-yellow mr-1"></div>
          <div class="text-font">&#8804; 2 hours</div>
        </div>
        <div class="flex items-center mr-6">
          <div class="w-4 h-4 bg-calendar-light-green mr-1"></div>
          <div class="text-font">&#8804; 4 hours</div>
        </div>
        <div class="flex items-center">
          <div class="w-4 h-4 bg-calendar-green mr-1"></div>
          <div class="text-font">&gt; 4 hours</div>
        </div>
      </div>
      <div class="calendar-container">
        <div class="calendar"></div>
      </div>
    </div>
  </div>
</div>

<script>
    const user_study_history = JSON.parse('<%- JSON.stringify(user.study_history) %>');

    document.addEventListener('DOMContentLoaded', () => {
        console.log("DOM fully loaded and parsed in profile");

        // JavaScript for toggling the dropdown menu
        document.getElementById('editButton').addEventListener('click', function (event) {
            event.stopPropagation();
            const dropdownMenu = document.getElementById('editMenu');
            dropdownMenu.classList.toggle('hidden');
        });

        // Close the dropdown when clicking outside of it
        document.addEventListener('click', function (event) {
            const dropdownMenu = document.getElementById('editMenu');
            const button = document.getElementById('editButton');
            if (!button.contains(event.target) && !dropdownMenu.contains(event.target)) {
            dropdownMenu.classList.add('hidden');
            }
        });

        document.querySelectorAll('.hover-image').forEach(link => {
            const img = link.querySelector('img');
            console.log(img);
            const originalSrc = img.src;
            const hoverSrc = img.getAttribute('edit-hover');
            console.log(hoverSrc);
            console.log(originalSrc);

            link.addEventListener('mouseenter', () => {
                img.src = hoverSrc;
            });

            link.addEventListener('mouseleave', () => {
                img.src = originalSrc;
            });
        });

        let userDailyGoal = 12; 
        let userWeeklyGoal = 80; 
        const userDailyProgress = 9; 
        const userWeeklyProgress = 50; 

        // Max values in hours
        const maxDailyGoal = 24;
        const maxWeeklyGoal = 168;

        // Calculate progress percentages
        var dailyProgressPercent = (userDailyProgress / userDailyGoal) * 100;
        var weeklyProgressPercent = (userWeeklyProgress / userWeeklyGoal) * 100;

        // Update the progress bars
        document.getElementById('daily-progress').style.width = `${Math.min(dailyProgressPercent, 100)}%`;
        document.getElementById('weekly-progress').style.width = `${Math.min(weeklyProgressPercent, 100)}%`;

        // Update goal labels    
        document.getElementById('daily-goal-label').textContent = `${userDailyGoal} hrs`;
        document.getElementById('weekly-goal-label').textContent = `${userWeeklyGoal} hrs`;

        // Modal handling
        const modal = document.getElementById("goal-modal");
        const button = document.getElementById("goal-button");
        const close = document.getElementById("close-modal");

        // Open the modal
        button.onclick = function() {
            modal.style.display = "flex";
        }

        // Close the modal
        close.onclick = function() {
            modal.style.display = "none";
        }

        // Close the modal if clicked outside of it
        window.onclick = function(event) {
            if (event.target == modal) {
            modal.style.display = "none";
            }
        }

        // Form submission
        document.getElementById('goal-form').addEventListener('submit', function(event) {
            event.preventDefault();
            userDailyGoal = document.getElementById('daily-goal').value;
            userWeeklyGoal = document.getElementById('weekly-goal').value;

            // Recalculate progress percentages
            const newDailyProgressPercent = (userDailyProgress / userDailyGoal) * 100;
            const newWeeklyProgressPercent = (userWeeklyProgress / userWeeklyGoal) * 100;

            // Update the progress bars
            document.getElementById('daily-progress').style.width = `${Math.min(newDailyProgressPercent, 100)}%`;
            document.getElementById('weekly-progress').style.width = `${Math.min(newWeeklyProgressPercent, 100)}%`;

            // Update goal labels
            document.getElementById('daily-goal-label').textContent = `${userDailyGoal} hrs`;
            document.getElementById('weekly-goal-label').textContent = `${userWeeklyGoal} hrs`;

            // Close the modal
            modal.style.display = "none";
        });


        // Code for displaying calendar
        const calendar = document.querySelector('.calendar');
        const yearSelect = document.getElementById('year-select');
        const years = new Set(user_study_history.map(day => day.date.split('-')[0]));

        const defaultOption = document.createElement("option");
        defaultOption.value = "";
        defaultOption.textContent = "All";
        yearSelect.appendChild(defaultOption);

            years.forEach(year => {
                const yearOption = document.createElement('option');
                yearOption.value = year;
                yearOption.textContent = year;
                yearSelect.appendChild(yearOption);
            });

            yearSelect.addEventListener('change', () => {
                displayHistory(yearSelect.value);
            });

            function displayHistory(selectedYear) {
                calendar.innerHTML = '';
                user_study_history.forEach(day => {
                    const [year, month, date] = day.date.split('-');
                    if (selectedYear === '' || year === selectedYear) {
                        const dayBox = document.createElement('div');
                        dayBox.classList.add('day-box');
                        if (day.total_hours <= 7200) { // 2 hours in seconds
                            dayBox.classList.add('low');
                        } else if (day.total_hours <= 14400) { // 4 hours in seconds
                            dayBox.classList.add('medium');
                        } else {
                            dayBox.classList.add('high');
                        }
                        const yearSpan = document.createElement('span');
                        yearSpan.textContent = year;

                        const hoursSpan = document.createElement('span');
                        const hours = (day.total_hours / 3600).toFixed(1);
                        hoursSpan.textContent = `${hours} hrs`;

                        const dateSpan = document.createElement('span');
                        dateSpan.textContent = `${month} - ${date}`; // Extract and format the month and day
                        dateSpan.classList.add('text-xs');

                        dayBox.appendChild(yearSpan);
                        dayBox.appendChild(dateSpan);
                        dayBox.appendChild(hoursSpan);

                        calendar.appendChild(dayBox);
                    }
                });
            }
            yearSelect.value = '';
            displayHistory('');
    });
</script>

<%- include("templates/navbar") %>
